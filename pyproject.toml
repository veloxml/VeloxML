[build-system]
requires = ["setuptools", "wheel", "scikit-build", "cmake", "ninja", "pybind11"]
build-backend = "setuptools.build_meta"

[tool.cmake]
args = ["-DBUILD_TESTS=OFF", "-DBUILD_GMOCK=OFF", "-DINSTALL_GTEST=OFF"]

[project]
name = "veloxml"  # あなたのプロジェクト名
version = "0.0.1"
description = "High-Performance Machine Learning Library for Python (Powered by C++)"
authors = [
    { name = "Yuji Chinen", email = "veloxml1113@gmail.com" }
]
license = { file = "LICENSE" }
readme = "README.md"
dependencies = [
    "numpy",
    "pybind11",
] 
keywords = ["veloxml", "machine-learning", "high-performance", "python", "cpp"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: C++"
]

[project.optional-dependencies]
dev = [
    "pytest",
    "sphinx"
]

[project.urls]
Homepage = "https://github.com/veloxml/VeloxML"
Documentation = "https://veloxml.github.io/VeloxML/"
Repository = "https://github.com/veloxml/VeloxML"
Issues = "https://github.com/veloxml/VeloxML/issues"

[tool.setuptools.packages.find]
where = ["."]  # ここを変更（ディレクトリを明示的に設定）
include = ["veloxml*"]  # サブパッケージも含める

[tool.setuptools.package-data]
veloxml = ["core/*.so", "**/*.py"]  # .soファイルを含める

[tool.setuptools.exclude-package-data]
veloxml = ["core/include/gtest/*", "core/lib/gtest*", "**/*.cpp", "**/*.hpp"]

[tool.cibuildwheel]
build = "cp39* cp310* cp311* cp312* cp313*"
#test-requires = "pytest"
#test-command = "pytest {package}/tests"

[tool.cibuildwheel.linux]

before-build = "python -m ensurepip --upgrade && pip install scikit-build ninja cmake pybind11"

environment = "PATH=$PATH:/usr/local/bin CMAKE_INCLUDE_PATH=/usr/include/openblas:$CMAKE_INCLUDE_PATH"

manylinux-x86_64-image =  "veloxml/for-build-linux-x86_64:latest"
manylinux-aarch64-image = "veloxml/for-build-linux-aarch64:latest"

[tool.cibuildwheel.macos]
build = "cp312* cp313*"
repair-wheel-command = "delocate-wheel --exclude libgomp.1.dylib --exclude libgcc_s.1.1.dylib -w {dest_dir} {wheel}"
