[build-system]
requires = ["setuptools", "wheel", "scikit-build", "cmake", "ninja", "pybind11"]
build-backend = "setuptools.build_meta"

[tool.cmake]
args = ["-DBUILD_TESTS=OFF", "-DBUILD_GMOCK=OFF", "-DINSTALL_GTEST=OFF"]

[project]
name = "veloxml"  # あなたのプロジェクト名
version = "0.0.1"
description = "High-Performance Machine Learning Library for Python (Powered by C++)"
authors = [
    { name = "Yuji Chinen", email = "veloxml1113@gmail.com" }
]
license = { file = "LICENSE" }
readme = "README.md"
dependencies = [
    "numpy",
    "pybind11",
] 
keywords = ["veloxml", "machine-learning", "high-performance", "python", "cpp"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License"
]

[project.optional-dependencies]
dev = [
    "pytest",
    "sphinx"
]

[project.urls]
Homepage = "https://github.com/veloxml/VeloxML"
Documentation = "https://veloxml.github.io/VeloxML/"
Repository = "https://github.com/veloxml/VeloxML"
Issues = "https://github.com/veloxml/VeloxML/issues"

[tool.setuptools.packages.find]
where = ["."]  # ここを変更（ディレクトリを明示的に設定）
include = ["veloxml*"]  # サブパッケージも含める

[tool.setuptools.package-data]
veloxml = ["core/*.so", "**/*.py"]  # .soファイルを含める

[tool.setuptools.exclude-package-data]
veloxml = ["core/include/gtest/*", "core/lib/gtest*", "**/*.cpp", "**/*.hpp"]

[tool.cibuildwheel]

#test-requires = "pytest"
#test-command = "pytest {package}/tests"

[tool.cibuildwheel.linux]
build = """
    cp39-manylinux_x86_64 cp310-manylinux_x86_64 cp311-manylinux_x86_64 cp312-manylinux_x86_64 cp313-manylinux_x86_64 \\
    cp39-manylinux_aarch64 cp310-manylinux_aarch64 cp311-manylinux_aarch64 cp312-manylinux_aarch64 cp313-manylinux_aarch64
"""

before-all = """
    yum install -y wget && \
    yum install -y gmp  gmp-devel  mpfr  mpfr-devel  libmpc  libmpc-devel  && yum install -y kernel-devel kernel-headers && \ 
    wget https://ftp.tsukuba.wide.ad.jp/software/gcc/releases/gcc-14.2.0/gcc-14.2.0.tar.gz &&  \
    tar -zvxf gcc-14.2.0.tar.gz && cd gcc-14.2.0 && mkdir build && cd build && \
    ../configure --enable-languages=c,c++ --prefix=/usr/local/gcc-14.2.0 --enable-checking=release --disable-bootstrap --disable-multilib && \
    make -j$(nproc) && make install && \
    yum install -y openblas* lapack* libgomp && yum groupinstall -y 'Development Tools' && \
    cd /root/ && wget https://github.com/uxlfoundation/oneTBB/archive/refs/tags/v2022.0.0.tar.gz && \
    tar -zvxf v2022.0.0.tar.gz && cd oneTBB-2022.0.0/ && mkdir build && cd build && cmake -DCMAKE_INSTALL_PREFIX=/usr/local/tbb -DTBB_TEST=OFF .. && \
    cmake --build . && cmake --install . 
"""

environment = "PATH=$PATH:/usr/local/bin PYTHON_CONFIGURE_OPTS='--enable-shared' CMAKE_INCLUDE_PATH=/usr/include/openblas:$CMAKE_INCLUDE_PATH"

manylinux-x86_64-image = "manylinux_2_28"
manylinux-aarch64-image = "manylinux_2_28"

[tool.cibuildwheel.macos]
build = "cp312*"
repair-wheel-command = "delocate-wheel --exclude libgomp.1.dylib --exclude libgcc_s.1.1.dylib -w {dest_dir} {wheel}"
