name: Release Build

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    name: Build & Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y ninja-build cmake g++ python3 python3-pip
          pip install -U build scikit-build ninja pytest cibuildwheel

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install ninja cmake gcc
          pip install -U build scikit-build ninja pytest cibuildwheel

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install mingw ninja cmake
          pip install -U build scikit-build ninja pytest cibuildwheel

      - name: Build Python Wheels
        run: cibuildwheel --output-dir wheelhouse

      - name: Build Source Distribution (sdist)
        run: python -m build --sdist --outdir wheelhouse

      - name: Upload Wheels
        uses: actions/upload-artifact@v4
        with:
          name: python-wheels
          path: wheelhouse/*

  release:
    name: Publish to GitHub Releases
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-artifacts
          path: wheelhouse/

      - name: Set up GitHub CLI
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Create GitHub Release
        run: |
          gh release create "${{ github.ref_name }}" wheelhouse/* \
            --title "Release ${{ github.ref_name }}" \
            --notes "Auto-generated release."

  publish-pypi:
    name: Publish to PyPI
    needs: release
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/veloxml
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-wheels
          path: wheelhouse/

      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
